* Starting with the installation
Installing the prerequisites:

apt update

$ sudo apt install wget build-essential apache2 php libapache2-mod-php7.2 php-gd libgd-dev unzip postfix

User and group configuration
$ useradd nagios
$ groupadd nagcmd
$ usermod -a -G nagcmd nagios
$ usermod -a -G nagios,nagcmd www-data

      # Download and extract the Nagios core
$ wget https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.2.0.tar.gz
$ tar -xzf nagios*.tar.gz

hostname nagios-server
vi /etc/hostname
	#will have the private IP in this , check it
bash

You will have to configure it with the user and the group you have created earlier
$ ls
$ cd nagios-4.2.0
$ ./configure --with-nagios-group=nagios --with-command-group=nagcmd
$ make all
$ make install
$ make install-commandmode 
$ make install-init
$ make install-config
$ /usr/bin/install -c -m 644 sample-config/httpd.conf /etc/apache2/sites-available/nagios.conf

Copy evenhandler directory to the nagios directory
$ cp -R contrib/eventhandlers/ /usr/local/nagios/libexec/
$ chown -R nagios:nagios /usr/local/nagios/libexec/eventhandlers

Install the Nagios Plugins
$ wget https://nagios-plugins.org/download/nagios-plugins-2.2.1.tar.gz
$ tar -xzf nagios-plugins*.tar.gz

Install the Nagios plugin's with the commands below
$ ./configure --with-nagios-user=nagios --with-nagios-group=nagios --with-openssl
$ make
$ make install 

You can find the default configuration of Nagios in /usr/local/nagios/. We will configure Nagios and Nagios contact. Edit default nagios configuration with nano

$ sudo vi /usr/local/nagios/etc/nagios.cfg
uncomment line 51 for the host monitor configuration.
Save and exit.

Add a new folder named servers.
$ mkdir -p /usr/local/nagios/etc/servers

Change the user and group for the new folder to nagios:
$ chown nagios:nagios /usr/local/nagios/etc/servers

Enable Apache modules
$ sudo a2enmod rewrite
$ sudo a2enmod cgi

You can use the htpasswd command to configure a user nagiosadmin for the nagios web interface

$ sudo htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin

Enable the Nagios virtualhost
$ sudo ln -s /etc/apache2/sites-available/nagios.conf /etc/apache2/sites-enabled/

Start Apache 
$ service apache2 restart 

When Nagios starts, you may see the following error 
Starting nagios (via systemctl): nagios.serviceFailed
DON'T WORRY WE CAN FIX IT
FOLLOW THE COMMANDS
$ cd /etc/init.d/
If you could find the nagios file there in the folder 
$ cp /etc/init.d/skeleton /etc/init.d/nagios
$ nano /etc/init.d/nagios
Paste this code at the end of the file
----------------------------------------
DESC="Nagios"
NAME=nagios
DAEMON=/usr/local/nagios/bin/$NAME
DAEMON_ARGS="-d /usr/local/nagios/etc/nagios.cfg"
PIDFILE=/usr/local/nagios/var/$NAME.lock
-------------------------------------------------------------------
Make it executable and start Nagios
$ chmod +x /etc/init.d/nagios
$ service apache2 restart
WE DIDN'T FINISH YET
First we are going to create/change the nagios.service
$ nano /etc/systemd/system/nagios.service
Paste the following code of the file 
---------------------------------------------------------------
[Unit]
Description=Nagios
BindTo=network.target

[Install]
WantedBy=multi-user.target

[Service]
User=nagios
Group=nagios
Type=simple
ExecStart=/usr/local/nagios/bin/nagios /usr/local/nagios/etc/nagios.cfg
------------------------------------------------------------------
We need to enable created nagios.service config
$ systemctl enable /etc/systemd/system/nagios.service
$ service nagios start
---------------------------------------------------------------------------
To check the service is working 
$ service nagios status
---------------------------------------------------------------------------
After this Open chrome webpage and give the public Ip with /nagios to open the Nagios UI

----------------------------------------------------------------------------------
Don't forget to install htop to monitor your memory 
$ apt install htop

-------------------------------------------------------------------------
https://tecadmin.net/install-nrpe-on-ubuntu/

# client system monitor
sudo apt update
sudo apt install nagios-nrpe-server nagios-plugins

sudo vi /etc/nagios/nrpe.cfg
	 allowed_hosts=127.0.0.1, serverip
	 server
	 
sudo /etc/init.d/nagios-nrpe-server restart

-------------------------------------------------------------------------
back to server 

vi /usr/local/nagios/etc/objects/client1.cfg

# Define a host for the local machine

define host{
        use                     linux-server            ; Name of host template to use
                                                        ; This host definition will inherit all variables that are defined
                                                        ; in (or inherited by) the linux-server host template definition.
        host_name               client1
        alias                   ubuntu client
        address                 172.31.95.171
        }



# Define a service to "ping" the local machine

define service{
        use                             local-service         ; Name of service template to use
        host_name                       client1
        service_description             PING
        check_command                   check_ping!100.0,20%!500.0,60%
        }


# Define a service to check the disk space of the root partition
# on the local machine.  Warning if < 20% free, critical if
# < 10% free space on partition.

define service{
        use                             local-service         ; Name of service template to use
        host_name                       client1
        service_description             Root Partition
        check_command                   check_local_disk!20%!10%!/
        }



# Define a service to check the number of currently logged in
# users on the local machine.  Warning if > 20 users, critical
# if > 50 users.

define service{
        use                             local-service         ; Name of service template to use
        host_name                       client1
        service_description             Current Users
        check_command                   check_local_users!20!50
		}
define service{
        use                             local-service         ; Name of service template to use
        host_name                       client1
        service_description             Total Processes
        check_command                   check_local_procs!250!400!RSZDT
        }



# Define a service to check the load on the local machine.

define service{
        use                             local-service         ; Name of service template to use
        host_name                       client1
        service_description             Current Load
        check_command                   check_local_load!5.0,4.0,3.0!10.0,6.0,4.0
        }



# Define a service to check the swap usage the local machine.
# Critical if less than 10% of swap is free, warning if less than 20% is free

define service{
        use                             local-service         ; Name of service template to use
        host_name                       client1
        service_description             Swap Usage
        check_command                   check_local_swap!20!10
        }
define service{
        use                             local-service         ; Name of service template to use
        host_name                       client1
        service_description             SSH
        check_command                   check_ssh
        notifications_enabled           0
        }

# Define a service to check HTTP on the local machine.
# Disable notifications for this service by default, as not all users may have HTTP enabled.

define service{
        use                             local-service         ; Name of service template to use
        host_name                       client1
        service_description             HTTP
        check_command                   check_http
        notifications_enabled           0
        }

systemctl restart nagios



		
		
